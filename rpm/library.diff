--- upstream/lib/getdef.c
+++ upstream/lib/getdef.c
@@ -30,12 +30,13 @@
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */

-#include <config.h>
+#include <stdbool.h>
+#include <stdint.h>
+#include <limits.h>
+#include <string.h>

-#ident "$Id$"
+#define SYSLOG(...)

-#include "prototypes.h"
-#include "defines.h"
 #include <stdio.h>
 #include <stdlib.h>
 #include <ctype.h>
@@ -78,6 +79,10 @@ struct itemdef {
 	{"ULIMIT", NULL},


+#define USE_SYSLOG
+#define USE_SHA_CRYPT
+#define WITH_TCB
+
 #define NUMDEFS	(sizeof(def_table)/sizeof(def_table[0]))
 static struct itemdef def_table[] = {
 	{"CHFN_RESTRICT", NULL},
@@ -250,7 +255,7 @@ int getdef_num (const char *item, int dflt)
 	    || (val > INT_MAX)
 	    || (val < INT_MIN)) {
 		fprintf (stderr,
-		         _("configuration error - cannot parse %s value: '%s'"),
+		         "configuration error - cannot parse %s value: '%s'",
 		         item, d->value);
 		return dflt;
 	}
@@ -285,7 +290,7 @@ unsigned int getdef_unum (const char *item, unsigned int dflt)
 	    || (val < 0)
 	    || (val > INT_MAX)) {
 		fprintf (stderr,
-		         _("configuration error - cannot parse %s value: '%s'"),
+		         "configuration error - cannot parse %s value: '%s'",
 		         item, d->value);
 		return dflt;
 	}
@@ -318,7 +323,7 @@ long getdef_long (const char *item, long dflt)

 	if (getlong (d->value, &val) == 0) {
 		fprintf (stderr,
-		         _("configuration error - cannot parse %s value: '%s'"),
+		         "configuration error - cannot parse %s value: '%s'",
 		         item, d->value);
 		return dflt;
 	}
@@ -351,7 +356,7 @@ unsigned long getdef_ulong (const char *item, unsigned long dflt)
 	if (getulong (d->value, &val) == 0) {
 		/* FIXME: we should have a getulong */
 		fprintf (stderr,
-		         _("configuration error - cannot parse %s value: '%s'"),
+		         "configuration error - cannot parse %s value: '%s'",
 		         item, d->value);
 		return dflt;
 	}
@@ -387,7 +392,7 @@ int putdef_str (const char *name, const char *value)
 	 */
 	cp = strdup (value);
 	if (NULL == cp) {
-		(void) fputs (_("Could not allocate space for config info.\n"),
+		(void) fputs ("Could not allocate space for config info.\n",
 		              stderr);
 		SYSLOG ((LOG_ERR, "could not allocate space for config info"));
 		return -1;
@@ -413,6 +418,9 @@ static /*@observer@*/ /*@null@*/struct itemdef *def_find (const char *name)
 {
 	struct itemdef *ptr;

+	if (name == NULL) {
+		return (struct itemdef *) NULL;
+	}

 	/*
 	 * Search into the table.
@@ -434,7 +442,7 @@ static /*@observer@*/ /*@null@*/struct itemdef *def_find (const char *name)
 		}
 	}
 	fprintf (stderr,
-	         _("configuration error - unknown item '%s' (notify administrator)\n"),
+	         "configuration error - unknown item '%s' (notify administrator)\n",
 	         name);
 	SYSLOG ((LOG_CRIT, "unknown configuration item `%s'", name));

@@ -600,12 +608,11 @@ static void def_load (void)
 #endif
 }

-
 #ifdef CKDEFS
 int main (int argc, char **argv)
 {
 	int i;
-	char *cp;
+	const char *cp;
 	struct itemdef *d;

 	def_load ();
--- upstream/lib/getlong.c
+++ upstream/lib/getlong.c
@@ -27,13 +27,8 @@
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */

-#include <config.h>
-
-#ident "$Id$"
-
 #include <stdlib.h>
 #include <errno.h>
-#include "prototypes.h"

 /*
  * getlong - extract a long integer provided by the numstr string in *result
@@ -56,4 +51,3 @@ int getlong (const char *numstr, /*@out@*/long int *result)
 	*result = val;
 	return 1;
 }
-
--- upstream/lib/getulong.c
+++ upstream/lib/getulong.c
@@ -27,13 +27,8 @@
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */

-#include <config.h>
-
-#ident "$Id: getlong.c 2763 2009-04-23 09:57:03Z nekral-guest $"
-
 #include <stdlib.h>
 #include <errno.h>
-#include "prototypes.h"

 /*
  * getulong - extract an unsigned long integer provided by the numstr string in *result
--- upstream/lib/getdef.h
+++ upstream/lib/getdef.h
@@ -32,6 +32,12 @@
 #ifndef _GETDEF_H
 #define _GETDEF_H

+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include <stdbool.h>
+
 /* getdef.c */
 extern bool getdef_bool (const char *);
 extern long getdef_long (const char *, long);
@@ -40,9 +46,12 @@ extern unsigned long getdef_ulong (const char *, unsigned long);
 extern unsigned int getdef_unum (const char *, unsigned int);
 extern /*@observer@*/ /*@null@*/const char *getdef_str (const char *);
 extern int putdef_str (const char *, const char *);
-extern void setdef_config_file (const char* file);

 /* default UMASK value if not specified in /etc/login.defs */
 #define		GETDEF_DEFAULT_UMASK	022

+#ifdef __cplusplus
+}
+#endif
+
 #endif				/* _GETDEF_H */
